---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: rdscacheclusters.xcomposite.crossplane.giantswarm.io
spec:
  claimNames:
    kind: RdsCacheClusterClaim
    plural: rdscacheclusterclaims
  defaultCompositionRef:
    name: rds-cache-cluster
  enforcedCompositionRef:
    name: rds-cache-cluster
  group: xcomposite.crossplane.giantswarm.io
  names:
    kind: RdsCacheCluster
    listKind: RdsCacheClusterList
    plural: rdscacheclusters
    shortNames:
    - rdscc
    singular: rdscachecluster
  versions:
  - name: v1alpha1
    referenceable: true
    schema:
      openAPIV3Schema:
        properties:
          spec:
            properties:
              availabilityZones:
                description: AvailabilityZones is the list of availability zones to
                  be used by the cluster
                items:
                  type: string
                maxItems: 3
                minItems: 3
                type: array
              cache:
                description: Cache defines the cache settings
                properties:
                  applyImmediately:
                    description: |-
                      ApplyImmediately specifies whether the changes should be applied
                      immediately or during the next maintenance window.
                    type: boolean
                  atRestEncryptionEnabled:
                    description: |-
                      AtRestEncryptionEnabled specifies whether data stored in the cluster is
                      encrypted at rest.
                    type: boolean
                  authTokenUpdateStrategy:
                    description: AuthTokenUpdateStrategy specifies how the auth token
                      should be updated.
                    enum:
                    - rotate
                    - set
                    type: string
                  autoMinorVersionUpgrade:
                    description: |-
                      AutoMinorVersionUpgrade specifies whether minor engine upgrades will be
                      applied automatically to the cluster during the maintenance window.
                    type: boolean
                  automaticFailoverEnabled:
                    description: |-
                      AutomaticFailoverEnabled specifies whether a read replica will be
                      automatically promoted to the primary cluster if the existing primary
                      cluster fails.


                      If enabled, NumCacheNodes must be greater than 1. Must be enabled for
                      Redis (cluster mode enabled) replication groups.
                    type: boolean
                  azMode:
                    description: |-
                      AzMode specifies the Availability Zone mode of the cluster.


                      This parameter is only valid when the Engine parameter is memcached.
                      For resiliance, we recommend setting the AzMode parameter to cross-az and
                      this is the default value. In this mode, the number of nodes must be > 1
                      If memcached is selected, the number of nodes will default to 3, one per
                      availability zone.
                    enum:
                    - single-az
                    - cross-az
                    type: string
                  cacheClusters:
                    description: |-
                      CacheClusters is a list of cache clusters in the replication group.


                      This value is overridden by NumCacheClusters.


                      May be used to specify cluster specific configuration.
                    items:
                      properties:
                        applyImmediately:
                          description: |-
                            ApplyImmediately specifies whether the changes should be applied
                            immediately or during the next maintenance window.
                          type: boolean
                        autoMinorVersionUpgrade:
                          description: |-
                            AutoMinorVersionUpgrade specifies whether minor engine upgrades will be
                            applied automatically to the cluster during the maintenance window.
                          type: boolean
                        availabilityZone:
                          description: |-
                            AvailabilityZone is the name of the Availability Zone in which the
                            cluster will be created.


                            If you want to create cache nodes in multi-az, use
                            preferred_availability_zones instead.
                            Default: System chosen Availability Zone.
                          type: string
                        azMode:
                          description: |-
                            AzMode specifies the Availability Zone mode of the cluster.


                            This parameter is only valid when the Engine parameter is memcached.
                            For resiliance, we recommend setting the AzMode parameter to cross-az and
                            this is the default value. In this mode, the number of nodes must be > 1
                            If memcached is selected, the number of nodes will default to 3, one per
                            availability zone.
                          enum:
                          - single-az
                          - cross-az
                          type: string
                        engine:
                          description: |-
                            Engine is the name of the cache engine to be used for the clusters in
                            this group.
                          enum:
                          - memcached
                          - redis
                          type: string
                        engineVersion:
                          description: |-
                            EngineVersion is the version number of the cache engine to be used for
                            the cluster. If not set this will default to the latest version.


                            This value will be ignored once the cluster is created.
                          type: string
                        finalSnapshotIdentifier:
                          description: |-
                            FinalSnapshotIdentifier is the user-supplied name for the final snapshot
                            that is created immediately before the cluster is deleted.
                          type: string
                        ipDiscovery:
                          description: IpDiscovery is the method used to discover
                            cluster nodes.
                          enum:
                          - ipv4
                          - ipv6
                          type: string
                        logDeliveryConfigurations:
                          description: |-
                            LogDeliveryConfiguration is a list of log delivery configurations for
                            the cluster.


                            This is only applicable when the Engine parameter is redis.
                          items:
                            properties:
                              destination:
                                description: Destination Name of the cloudwatch log
                                  group or for kinesis firehose resource.
                                type: string
                              destinationType:
                                description: DestinationType The destination type
                                  for the logs.
                                enum:
                                - cloudwatch-logs
                                - kinesis-firehose
                                type: string
                              logFormat:
                                description: LogFormat The log format to use.
                                enum:
                                - text
                                - json
                                type: string
                              logType:
                                description: LogType The type of log to deliver.
                                enum:
                                - slow-log
                                - engine-log
                                type: string
                            required:
                            - destination
                            - destinationType
                            - logType
                            type: object
                          type: array
                        maintenanceWindow:
                          description: |-
                            MaintenanceWindow specifies the weekly time range during which system
                            maintenance can occur.
                          type: string
                        networkType:
                          description: NetworkType specifies the network configuration
                            for the cluster.
                          enum:
                          - ipv4
                          - ipv6
                          - dual_stack
                          type: string
                        nodeType:
                          description: |-
                            NodeType is the instance class to use for the cache nodes.


                            Requried unless replication group is specified.
                          type: string
                        notificationTopicArn:
                          description: |-
                            NotificationTopicArn is the Amazon Resource Name (ARN) of the Amazon SNS
                            topic to which notifications will be sent.
                          type: string
                        numCacheNodes:
                          description: |-
                            NumCacheNodes is the number of cache nodes in the cluster.


                            Required unless replication group is specified.
                          format: int64
                          type: integer
                        outpostMode:
                          description: |-
                            OutpostMode specifies the outpost mode that will apply to the cache
                            cluster creation.


                            Currently only single-outpost is supported.
                          enum:
                          - single-outpost
                          - cross-outpost
                          type: string
                        parameterGroupName:
                          description: |-
                            ParameterGroupName is the name of the parameter group to associate with
                            this cluster.


                            Required unless replication group is specified.
                          type: string
                        port:
                          description: |-
                            Port is the port number on which each of the cache nodes will accept
                            connections.
                          format: int64
                          type: integer
                        preferredAvailabilityZones:
                          description: |-
                            PreferredAvailabilityZones is a list of Availability Zones in which the
                            cluster's nodes will be created.


                            Memcached only. The number of availability zones must equal the number of
                            nodes specified in the NumCacheNodes parameter.
                          items:
                            type: string
                          type: array
                        preferredOutpostArn:
                          description: |-
                            PreferredOutpostArn is the Amazon Resource Name (ARN) of the outpost in
                            which the cache cluster will be created.
                          type: string
                        securityGroupIds:
                          description: |-
                            SecurityGroupIds is a list of security group IDs to associate with the
                            cluster.
                          items:
                            type: string
                          type: array
                        snapshotArns:
                          description: |-
                            SnapshotArns is a list of Amazon Resource Names (ARNs) of the snapshots
                            from which to restore data into the cluster.


                            Optional, Redis only
                          items:
                            type: string
                          type: array
                        snapshotName:
                          description: |-
                            SnapshotName is the name of the snapshot from which to restore data into
                            the cluster.


                            Optional, Redis only
                          type: string
                        snapshotRetentionLimit:
                          description: |-
                            SnapshotRetentionLimit is the number of days for which ElastiCache will
                            retain automatic cache cluster snapshots before deleting them.


                            Optional, Redis only
                          format: int64
                          type: integer
                        snapshotWindow:
                          description: |-
                            SnapshotWindow is the daily time range (in UTC) during which ElastiCache
                            will begin taking a daily snapshot of the cache cluster.


                            Optional, Redis only
                          type: string
                        subnetGroupName:
                          description: |-
                            SubnetGroupName is the name of the subnet group to associate with this
                            cluster.


                            Required unless replication group is specified in which case it will be
                            ignored.
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a list of key-value pairs to associate
                            with the cluster.
                          maxProperties: 50
                          type: object
                        transitEncryptionEnabled:
                          description: |-
                            TransitEncryptionEnabled specifies whether data in the cluster is
                            encrypted in transit.


                            Optional, Memcached only
                          type: boolean
                      required:
                      - engine
                      type: object
                    type: array
                  clusterModeEnabled:
                    description: |-
                      ClusterModeEnabled specifies whether cluster mode is enabled for the
                      replication group.
                    type: boolean
                  createReplicationGroup:
                    description: |-
                      CreateReplicationGroup specifies whether a replication group should be
                      created.


                      If set false, the replication group configuration will be used for
                      creating a single cluster
                    type: boolean
                  dataTieringEnabled:
                    description: |-
                      DataTieringEnabled specifies whether data tiering is enabled for the
                      replication group.


                      Must be true if the replcation group is using r6gd nodes
                    type: boolean
                  engine:
                    description: |-
                      Engine is the name of the cache engine to be used for the clusters in
                      this group.
                    enum:
                    - memcached
                    - redis
                    type: string
                  engineVersion:
                    description: |-
                      EngineVersion is the version number of the cache engine to be used for
                      the cluster. If not set this will default to the latest version.


                      This value will be ignored once the cluster is created.
                    type: string
                  finalSnapshotIdentifier:
                    description: |-
                      FinalSnapshotIdentifier is the user-supplied name for the final snapshot
                      that is created immediately before the cluster is deleted.
                    type: string
                  globalReplicationGroup:
                    description: GlobalReplicationGroup is the global replication
                      group configuration.
                    properties:
                      automaticFailoverEnabled:
                        description: |-
                          AutomaticFailoverEnabled specifies whether a read replica will be
                          automatically promoted to the primary cluster if the existing primary
                          cluster fails.
                        type: boolean
                      cacheNodeType:
                        description: CacheNodeType is the instance class to use for
                          the cache nodes.
                        type: string
                      enabled:
                        description: Enabled is a flag that enables the global replication
                          group.
                        type: boolean
                      engineVersion:
                        description: |-
                          EngineVersion is the version number of the cache engine to be used for
                          the cluster. If not set this will default to the latest version.
                        type: string
                      numNodeGroups:
                        description: NumNodeGroups is the number of node groups in
                          the replication group.
                        format: int64
                        type: integer
                      parameterGroupName:
                        description: |-
                          ParameterGroupName is the name of the parameter group to associate with
                          the global replication group.


                          Required when upgrading to a new major engine version but subsequently
                          ignored.


                          Specifying this parameter will result in an error if a major engine version
                          is not specified.
                        type: string
                      suffix:
                        description: |-
                          GlobalReplicationGroupIdSuffix is the suffix to append to the global
                          replication group id.
                        type: string
                    type: object
                  globalReplicationGroupId:
                    description: |-
                      GlobalReplicationGroupId is the id of the global replication group to
                      which this replication group should belong.


                      If this value is specified, the number of node groups parameter must not
                      be specified.
                    type: string
                  ipDiscovery:
                    description: IpDiscovery is the method used to discover cluster
                      nodes.
                    enum:
                    - ipv4
                    - ipv6
                    type: string
                  kmsKeyId:
                    description: |-
                      KmsKeyId is the ID of the AWS Key Management Service (KMS) key used to
                      encrypt the data in the cluster.


                      Ignored unless AtRestEncryptionEnabled is set to true.
                    type: string
                  kubernetesProviderConfig:
                    description: |-
                      Provider configuration for the kubernetes provider


                      This is required for creating users for redis clusters.
                      If Redis is the engine type, this must be provided and
                      external-secrets-operator must be installed.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  logDeliveryConfigurations:
                    description: |-
                      LogDeliveryConfiguration is a list of log delivery configurations for
                      the cluster.


                      This is only applicable when the Engine parameter is redis.
                    items:
                      properties:
                        destination:
                          description: Destination Name of the cloudwatch log group
                            or for kinesis firehose resource.
                          type: string
                        destinationType:
                          description: DestinationType The destination type for the
                            logs.
                          enum:
                          - cloudwatch-logs
                          - kinesis-firehose
                          type: string
                        logFormat:
                          description: LogFormat The log format to use.
                          enum:
                          - text
                          - json
                          type: string
                        logType:
                          description: LogType The type of log to deliver.
                          enum:
                          - slow-log
                          - engine-log
                          type: string
                      required:
                      - destination
                      - destinationType
                      - logType
                      type: object
                    type: array
                  maintenanceWindow:
                    description: |-
                      MaintenanceWindow specifies the weekly time range during which system
                      maintenance can occur.
                    type: string
                  multiAzEnabled:
                    description: |-
                      MultiAzEnabled specifies whether the cluster should be created in
                      multiple Availability Zones.


                      If true, AutomaticFailoverEnabled must also be true.
                    type: boolean
                  networkType:
                    description: NetworkType specifies the network configuration for
                      the cluster.
                    enum:
                    - ipv4
                    - ipv6
                    - dual_stack
                    type: string
                  nodeType:
                    description: |-
                      NodeType is the instance class to use for the cache nodes.


                      Requried unless global replication group is specified.
                    type: string
                  notificationTopicArn:
                    description: |-
                      NotificationTopicArn is the Amazon Resource Name (ARN) of the Amazon SNS
                      topic to which notifications will be sent.
                    type: string
                  numCacheClusters:
                    description: |-
                      NumCacheClusters is the number of cache clusters in the replication group.


                      If MultiAzEnabled is true, this value must be at least 2 but generally
                      should be equal to the number of Availability Zones.


                      Conflicts with NumNodeGroups.
                    format: int64
                    type: integer
                  numCacheNodes:
                    description: |-
                      NumCacheNodes is the number of cache nodes in the cluster.


                      Ignored if replication group is specified or being created
                      This is a convenience parameter when building a single cluster.
                    format: int64
                    type: integer
                  numNodeGroups:
                    description: |-
                      NumNodeGroups is the number of node groups in the replication group.


                      If GlobalReplicationGroupId is specified or GlobalReplicationGroup.Enabled
                      is true, this value must not be specified.


                      Conflicts with NumCacheClusters.
                    format: int64
                    type: integer
                  parameterGroupConfiguration:
                    description: |-
                      ParameterGroupConfiguration defines the configuration for the parameter
                      group.
                    properties:
                      description:
                        description: Description is a description of the parameter
                          group.
                        type: string
                      family:
                        description: |-
                          Family is the name of the parameter group family that this parameter
                          group is compatible with.
                        type: string
                      name:
                        description: Name is the name of the parameter group.
                        type: string
                      parameters:
                        additionalProperties:
                          type: string
                        description: Parameters is a list of parameters in the parameter
                          group.
                        type: object
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a list of key-value pairs to associate
                          with the parameter group.
                        maxProperties: 50
                        type: object
                    required:
                    - family
                    - name
                    type: object
                  parameterGroupName:
                    description: |-
                      ParameterGroupName is the name of the parameter group to associate with
                      this cluster. To create a new parameter group, use the
                      `ParameterGroupConfiguration` option instead.
                    type: string
                  port:
                    description: |-
                      Port is the port number on which each of the cache nodes will accept
                      connections.
                    format: int64
                    type: integer
                  preferredCacheClusterAzs:
                    description: |-
                      PreferredCacheClusterAzs is a list ec2 availability zones in which the
                      cache clusters will be created.
                    items:
                      type: string
                    type: array
                  replicasPerNodeGroup:
                    description: ReplicasPerNodeGroup is the number of read replicas
                      per node group.
                    format: int64
                    maximum: 5
                    minimum: 0
                    type: integer
                  securityGroupIds:
                    description: |-
                      SecurityGroupIds is a list of security group IDs to associate with the
                      cluster.
                    items:
                      type: string
                    type: array
                  snapshotArns:
                    description: |-
                      SnapshotArns is a list of Amazon Resource Names (ARNs) of the snapshots
                      from which to restore data into the cluster.


                      Optional, Redis only
                    items:
                      type: string
                    type: array
                  snapshotName:
                    description: |-
                      SnapshotName is the name of the snapshot from which to restore data into
                      the cluster.


                      Optional, Redis only
                    type: string
                  snapshotRetentionLimit:
                    description: |-
                      SnapshotRetentionLimit is the number of days for which ElastiCache will
                      retain automatic cache cluster snapshots before deleting them.


                      Optional, Redis only
                    format: int64
                    type: integer
                  snapshotWindow:
                    description: |-
                      SnapshotWindow is the daily time range (in UTC) during which ElastiCache
                      will begin taking a daily snapshot of the cache cluster.


                      Optional, Redis only
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags is a list of key-value pairs to associate with
                      the cluster.
                    maxProperties: 50
                    type: object
                  transitEncryptionEnabled:
                    description: |-
                      TransitEncryptionEnabled specifies whether data in the cluster is
                      encrypted in transit.


                      Optional, Memcached only
                    type: boolean
                  usernames:
                    description: Usernames is a list of users to associate with the
                      cluster.
                    items:
                      type: string
                    type: array
                type: object
              database:
                description: Database defines the database settings
                properties:
                  activityStream:
                    description: ActivityStream is the activity stream configuration.
                    properties:
                      enabled:
                        description: Enabled is whether activity stream is enabled.
                        type: boolean
                      engineNativeAuditFieldsIncluded:
                        description: |-
                          EngineNativeAuditFieldsIncluded is whether engine native audit fields are
                          included. This option only applies to Oracle databases.
                        type: boolean
                      mode:
                        description: Mode is the mode of the activity stream. Valid
                          values are `sync` and `async`.
                        enum:
                        - sync
                        - async
                        type: string
                    type: object
                  allocatedStorage:
                    description: AllocatedStorage is the size of the database.
                    format: int64
                    type: integer
                  allowMajorVersionUpgrade:
                    description: AllowMajorVersionUpgrade is whether major version
                      upgrades are allowed.
                    type: boolean
                  applyImmediately:
                    description: ApplyImmediately is whether changes should be applied
                      immediately.
                    type: boolean
                  autoMinorVersionUpgrade:
                    description: |-
                      AutoMinorVersionUpgrade is whether minor version upgrades are applied
                      automatically. This value can be overridden on a per instance basis.
                    type: boolean
                  autoscaling:
                    description: Autoscaling is the autoscaling configuration.
                    properties:
                      enabled:
                        description: Autoscaling is whether autoscaling is enabled.
                        type: boolean
                      maxCapacity:
                        description: MaxCapacity is the maximum capacity for autoscaling.
                        format: int64
                        type: integer
                      metricType:
                        description: MetricType is the type of metric to use for autoscaling.
                        enum:
                        - RDSReaderAverageCPUUtilization
                        - RDSReaderAverageDatabaseConnections
                        type: string
                      minCapacity:
                        description: MinCapacity is the minimum capacity for autoscaling.
                        format: int64
                        type: integer
                      policyName:
                        description: PolicyName is the name of the autoscaling policy.
                        type: string
                      scaleInCooldown:
                        description: |-
                          ScaleInCooldown is the amount of time, in seconds, after a scaling in
                          activity completes before another scaling activity can start.
                        format: int64
                        type: integer
                      scaleOutCooldown:
                        description: |-
                          ScaleOutCooldown is the amount of time, in seconds, after a scaling out
                          activity completes before another scaling activity can start.
                        format: int64
                        type: integer
                      targetCPU:
                        description: TargetCPU is CPU threshold which will initiate
                          autoscaling.
                        format: int64
                        type: integer
                      targetConnections:
                        description: |-
                          TargetConnections is the average number of connections threshold which
                          will initiate autoscaling. Default value is 70% of db.r4/r5/r6g.large's
                          default max_connections
                        format: int64
                        type: integer
                    type: object
                  backtrackWindow:
                    description: |-
                      BacktrackWindow is the target backtrack window, in seconds.
                      Only available for Aurora engine. To disable backtracking, set this value to 0.
                    format: int64
                    maximum: 259200
                    minimum: 0
                    type: integer
                  backupRetentionPeriod:
                    description: BackupRetentionPeriod is the number of days to retain
                      backups for.
                    format: int64
                    type: integer
                  cloudwatchLogGroupParameters:
                    description: CloudwatchLogGroup defines the parameters for the
                      log groups
                    properties:
                      class:
                        description: Class is the class of the log group.
                        type: string
                      create:
                        description: Create is whether the log group is to be created.
                        type: boolean
                      retentionInDays:
                        description: RetentionInDays is the number of days to retain
                          logs for.
                        format: int64
                        type: integer
                      skipDestroy:
                        description: SkipDestroy is whether the log group should be
                          skipped during destroy.
                        type: boolean
                    type: object
                  copyTagsToSnapshot:
                    description: CopyTagsToSnapshot is whether tags should be copied
                      to snapshots.
                    type: boolean
                  createCluster:
                    description: |-
                      CreateCluster is whether the cluster should be created.
                      By default this is true but for non-aurora clusters, the DB Cluster
                      resource is optional and can be omitted. In this case, the DB instances
                      will be created as `instance.rds` types.
                    type: boolean
                  databaseName:
                    description: DatabaseName is the name of the database to create.
                    type: string
                  dbClusterInstanceClass:
                    description: DbClusterInstanceClass is the instance class to use.
                    type: string
                  dbClusterParameterGroup:
                    description: DbClusterParameterGroup defines the parameters for
                      the DB cluster.
                    properties:
                      applyMethod:
                        description: |-
                          ApplyMethod is the apply method for the parameter group. Some engines
                          cannot apply changes immediately, and require a reboot in which case you
                          must set this value to `pending-reboot`.
                        enum:
                        - immediate
                        - pending-reboot
                        type: string
                      create:
                        description: Create is whether the parameter group is to be
                          created.
                        type: boolean
                      description:
                        description: Description is the description of the parameter
                          group.
                        type: string
                      family:
                        description: Family is the family of the parameter group.
                        type: string
                      name:
                        description: Name is the name of the parameter group.
                        type: string
                      parameters:
                        description: |-
                          Parameters is a list of parameters to associate with the parameter group.
                          Note that parameters may differ between families
                        items:
                          description: Parameter is a parameter to associate with
                            a parameter group.
                          pattern: ^[a-zA-Z0-9_]*$
                          type: string
                        type: array
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a set of tags to associate with the parameter
                          group.
                        maxProperties: 50
                        type: object
                    type: object
                  dbParameterGroup:
                    description: DbParameterGroup defines the parameters for the DB
                      instance.
                    properties:
                      create:
                        description: Create is whether the parameter group is created.
                        type: boolean
                      description:
                        description: Description is the description of the parameter
                          group.
                        type: string
                      family:
                        description: Family is the family of the parameter group.
                        type: string
                      name:
                        description: Name is the name of the parameter group.
                        type: string
                      parameters:
                        description: |-
                          Parameters is a list of parameters to associate with the parameter group.
                          Note that parameters may differ between families
                        items:
                          description: Parameter is a parameter to associate with
                            a parameter group.
                          pattern: ^[a-zA-Z0-9_]*$
                          type: string
                        type: array
                      tags:
                        additionalProperties:
                          type: string
                        description: Tags is a set of tags to associate with the parameter
                          group.
                        maxProperties: 50
                        type: object
                    type: object
                  deleteAutomatedBackups:
                    description: DeleteAutomatedBackups is whether automated backups
                      should be deleted.
                    type: boolean
                  deletionProtection:
                    description: DeletionProtection is whether deletion protection
                      is enabled.
                    type: boolean
                  domain:
                    description: Domain is the domain to use.
                    type: string
                  domainIAMRoleName:
                    description: DomainIAMRoleName is the name of the IAM role to
                      use.
                    type: string
                  enableGlobalWriteForwarding:
                    description: EnableGlobalWriteForwarding is whether global write
                      forwarding is enabled.
                    type: boolean
                  enableHttpEndpoint:
                    description: EnableHttpEndpoint is whether the HTTP endpoint is
                      enabled.
                    type: boolean
                  enableLocalWriteForwarding:
                    description: EnableLocalWriteForwarding is whether local write
                      forwarding is enabled.
                    type: boolean
                  enabledCloudwatchLogsExports:
                    description: EnabledCloudwatchLogsExports is the list of log types
                      to export to CloudWatch Logs.
                    items:
                      description: LogGroup is the name of a log group.
                      enum:
                      - audit
                      - error
                      - general
                      - slowquery
                      - postgresql
                      type: string
                    type: array
                  endpoints:
                    description: Endpoints is a list of custom endpoints to create.
                    items:
                      properties:
                        customEndpointType:
                          description: CustomEndpointType is the type of the custom
                            endpoint.
                          enum:
                          - READER
                          - ANY
                          type: string
                        excludedMembers:
                          description: |-
                            ExcludedMembers is a list of DB instances that aren't part of the custom
                            endpoint group.
                          items:
                            type: string
                          type: array
                        staticMembers:
                          description: |-
                            StaticMembers is a list of DB instances that are part of the custom
                            endpoint group.
                          items:
                            type: string
                          type: array
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a set of tags to associate with the
                            custom endpoint.
                          maxProperties: 50
                          type: object
                      type: object
                    type: array
                  engine:
                    description: Engine is the database engine to use.
                    type: string
                  engineMode:
                    description: EngineMode is the database engine mode to use.
                    enum:
                    - parallelquery
                    - provisioned
                    - serverless
                    type: string
                  engineVersion:
                    description: EngineVersion is the version of the database engine
                      to use.
                    type: string
                  enhancedMonitoring:
                    description: EnhancedMonitoring is the enhanced monitoring configuration.
                    properties:
                      description:
                        description: Description is the description of the monitoring
                          role.
                        type: string
                      enabled:
                        description: Enabled is whether enhanced monitoring is enabled.
                        type: boolean
                      forceDetachPolicies:
                        description: ForceDetachPolicies Whether to force detaching
                          any policies the monitoring role has before destroying it
                        type: boolean
                      managedPolicyArns:
                        description: ManagedPolicyArns is a list of ARNs for managed
                          policies to attach to the monitoring role.
                        items:
                          type: string
                        type: array
                      maxSessionDuration:
                        description: MaxSessionDuration is the maximum session duration
                          (in seconds) that you want to set for the monitoring role.
                        format: int64
                        type: integer
                      monitoringInterval:
                        description: MonitoringInterval is the interval, in seconds,
                          between points when Enhanced Monitoring metrics are collected
                          for the DB instance.
                        format: int64
                        type: integer
                      path:
                        description: Path is the path of the monitoring role.
                        type: string
                      permissionsBoundary:
                        description: PermissionsBoundary is the ARN of the policy
                          that is used to set the permissions boundary for the monitoring
                          role.
                        type: string
                    type: object
                  globalClusterIdentifier:
                    description: GlobalClusterIdentifier is the global cluster identifier
                      for an Aurora global database.
                    type: string
                  iamDatabaseAuthenticationEnabled:
                    description: IAMDatabaseAuthenticationEnabled is whether IAM database
                      authentication is enabled.
                    type: boolean
                  iamRoles:
                    description: IamRoles is a list of IAM roles to associate with
                      the DB cluster.
                    items:
                      properties:
                        featureName:
                          description: FeatureName is the name of the feature.
                          type: string
                        roleArn:
                          description: RoleArn is the ARN of the role.
                          type: string
                      type: object
                    type: array
                  instanceCount:
                    description: |-
                      InstanceCount is the number of instances to create.


                      If set, this value will create the requested number of instances using
                      defaults from the cluster configuration. If `instances` are specified,
                      this value is ignored.
                    format: int64
                    type: integer
                  instances:
                    description: Instances is a list of instances to create.
                    items:
                      properties:
                        allocatedStorage:
                          description: |-
                            AllocatedStorage is the size of the database.


                            Only applicable if not running in cluster mode. In cluster mode this value
                            is ignored.


                            Overrides `ClusterParameters.AllocatedStorage`
                          format: int64
                          type: integer
                        allowMajorVersionUpgrade:
                          description: |-
                            AllowMajorVersionUpgrade is whether major version upgrades are allowed.


                            Only applicable if not running in cluster mode. In cluster mode this value
                            is ignored.


                            Overrides `ClusterParameters.AllowMajorVersionUpgrade`
                          type: boolean
                        applyImmediately:
                          description: |-
                            ApplyImmediately is whether changes should be applied immediately.


                            Overrides `ClusterParameters.ApplyImmediately`
                          nullable: true
                          type: boolean
                        autoMinorVersionUpgrade:
                          description: |-
                            AutoMinorVersionUpgrade is whether minor version upgrades are applied
                            automatically.


                            Overrides `ClusterParameters.AutoMinorVersionUpgrade`
                          nullable: true
                          type: boolean
                        availabilityZone:
                          description: |-
                            AvailabilityZone is the availability zone for this instance.
                            Ignored if `multiAz` is true
                          nullable: true
                          type: string
                        backupRetentionPeriod:
                          description: |-
                            BackupRetentionPeriod is the number of days to retain backups for.


                            Only applicable if not running in cluster mode
                          format: int64
                          type: integer
                        copyTagsToSnapshot:
                          description: CopyTagsToSnapshot is whether tags should be
                            copied to snapshots.
                          nullable: true
                          type: boolean
                        databaseName:
                          description: DatabaseName is the name of the database to
                            create.
                          nullable: true
                          type: string
                        deleteAutomatedBackups:
                          description: |-
                            DeleteAutomatedBackups is whether automated backups should be deleted.


                            Only applicable if not running in cluster mode
                          type: boolean
                        deletionProtection:
                          description: |-
                            DeletionProtection is whether deletion protection is enabled.


                            Only applicable if not running in cluster mode
                          nullable: true
                          type: boolean
                        domainIamRoleName:
                          description: |-
                            DomainIamRoleName is the name of the IAM role to use.


                            Only applicable if not running in cluster mode
                          nullable: true
                          type: string
                        enabledCloudwatchLogsExports:
                          description: |-
                            EnabledCloudwatchLogsExports is the list of log types to export to CloudWatch Logs.


                            Only applicable if not running in cluster mode
                          items:
                            description: LogGroup is the name of a log group.
                            enum:
                            - audit
                            - error
                            - general
                            - slowquery
                            - postgresql
                            type: string
                          nullable: true
                          type: array
                        finalSnapshotIdentifier:
                          description: |-
                            FinalSnapshotIdentifier is the identifier of the final snapshot.


                            Only applicable if not running in cluster mode
                          nullable: true
                          type: string
                        iamDatabaseAuthenticationEnabled:
                          description: |-
                            IamDatabaseAuthenticationEnabled is whether IAM database authentication is enabled.


                            Only applicable if not running in cluster mode
                          nullable: true
                          type: boolean
                        instanceClass:
                          description: InstanceClass is the instance class to use.
                          nullable: true
                          type: string
                        iops:
                          description: |-
                            Iops is the amount of provisioned IOPS.


                            Only applicable if not running in cluster mode
                          format: int64
                          type: integer
                        licenseModel:
                          description: |-
                            LicenseModel is the license model to use.


                            Only applicable if not running in cluster mode.
                          nullable: true
                          type: string
                        monitoringInterval:
                          description: |-
                            MonitoringInterval is the interval, in seconds, between points when
                            Enhanced Monitoring metrics are collected for the DB instance.
                          format: int64
                          nullable: true
                          type: integer
                        multiAz:
                          description: |-
                            MultiAZ is whether the DB instance is a Multi-AZ deployment.


                            Only applicable if not running in cluster mode
                          nullable: true
                          type: boolean
                        networkType:
                          description: |-
                            NetworkType is the network type to use.


                            Only applicable if not running in cluster mode
                          nullable: true
                          type: string
                        optionGroupName:
                          description: |-
                            OptionGroupName is the name of the option group to associate with this DB
                            instance.


                            Only applicable if not running in cluster mode
                          nullable: true
                          type: string
                        parameterGroupName:
                          description: |-
                            ParameterGroupName is the name of the DB parameter group to associate
                            with this DB instance. Must pre-exist in the account. Mutually exclusive
                            with `RdsBaseDbCluster.dbParameterGroup`
                          nullable: true
                          type: string
                        performanceInsightsEnabled:
                          description: PerformanceInsightsEnabled is whether Performance
                            Insights is enabled.
                          nullable: true
                          type: boolean
                        performanceInsightsKmsKeyID:
                          description: |-
                            PerformanceInsightsKmsKeyID is the AWS KMS key identifier for encryption
                            of Performance Insights data.
                          nullable: true
                          type: string
                        performanceInsightsRetentionPeriod:
                          description: |-
                            PerformanceInsightsRetentionPeriod is the amount of time, in days, to
                            retain Performance Insights data.
                          format: int64
                          nullable: true
                          type: integer
                        preferredMaintenanceWindow:
                          description: PreferredMaintenanceWindow is the preferred
                            maintenance window.
                          nullable: true
                          type: string
                        promotionTier:
                          description: |-
                            PromotionTier is the order in which to promote an Aurora replica to the
                            primary instance.
                          format: int64
                          nullable: true
                          type: integer
                        publiclyAccessible:
                          description: PubliclyAccessible is whether the DB instance
                            is publicly accessible.
                          nullable: true
                          type: boolean
                        skipFinalSnapshot:
                          description: |-
                            SkipFinalSnapshot is whether to skip the final snapshot.


                            Only applicable if not running in cluster mode
                          nullable: true
                          type: boolean
                        storageEncrypted:
                          description: |-
                            StorageEncrypted is whether storage is encrypted.


                            Only applicable if not running in cluster mode
                          nullable: true
                          type: boolean
                        storageThroughput:
                          description: |-
                            StorageThroughput is the amount of storage throughput. Only applicable if
                            `storageType` is `gp3`


                            Only applicable if not running in cluster mode
                          format: int64
                          nullable: true
                          type: integer
                        storageType:
                          description: |-
                            StorageType is the storage type to use.


                            Only applicable if not running in cluster mode
                          nullable: true
                          type: string
                        tags:
                          additionalProperties:
                            type: string
                          description: Tags is a set of tags to associate with the
                            DB instance.
                          maxProperties: 50
                          nullable: true
                          type: object
                      type: object
                    type: array
                  iops:
                    description: Iops is the amount of provisioned IOPS.
                    format: int64
                    type: integer
                  masterUsername:
                    description: MasterUsername is the master username to use.
                    type: string
                  multiAz:
                    description: MultiAZ is whether the DB instance is a Multi-AZ
                      deployment.
                    type: boolean
                  partition:
                    description: Partition is the AWS partition to use.
                    enum:
                    - aws
                    - aws-cn
                    - aws-us-gov
                    type: string
                  performanceInsightsEnabled:
                    description: PerformanceInsightsEnabled is whether Performance
                      Insights is enabled.
                    type: boolean
                  performanceInsightsKmsKeyID:
                    description: PerformanceInsightsKmsKeyID is the AWS KMS key identifier
                      for encryption of Performance Insights data.
                    type: string
                  performanceInsightsRetentionPeriod:
                    description: PerformanceInsightsRetentionPeriod is the amount
                      of time, in days, to retain Performance Insights data.
                    format: int64
                    type: integer
                  preferredBackupWindow:
                    description: PreferredBackupWindow is the preferred backup window.
                    type: string
                  preferredMaintenanceWindow:
                    description: PreferredMaintenanceWindow is the preferred maintenance
                      window.
                    type: string
                  provisionSql:
                    description: |-
                      ProvisionSql determines whether or not to provision databases inside the
                      RDS cluster.
                    properties:
                      connectionSecretName:
                        description: |-
                          The name of the connection secret to use for the RDS instance


                          Required if `providerConfigRef` is not provided, ignored otherwise
                          Must exist in the same namespace as the provisioning claim


                          If this value is provided, the composition will attempt to create a
                          provider config using the engine specific providerconfig spec
                        type: string
                      databases:
                        additionalProperties:
                          additionalProperties:
                            description: |-
                              Defines a user to create in the database


                              See the provider specific documentation for the available configuration
                              parameters.


                              With the exception of `configurationParameters`, all fields should be
                              created as elements directly on the user object and not as nested objects.
                            properties:
                              configurationParameters:
                                additionalProperties:
                                  type: string
                                description: |-
                                  ConfigurationParameters is the configuration parameters for the user.


                                  Only applicable for postgresql databases
                                type: object
                              privileges:
                                description: Privileges is a list of privileges to
                                  grant to the user.
                                items:
                                  type: string
                                type: array
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                          description: A list of SqlUser objects to use for the database
                          type: object
                          x-kubernetes-map-type: atomic
                        description: Databases is a map of databases to create.
                        type: object
                        x-kubernetes-map-type: atomic
                      enabled:
                        description: Determines if the RDS provisioning should be
                          enabled
                        type: boolean
                      engine:
                        description: The type of database engine being provisioned
                        enum:
                        - postgres
                        - mysql
                        - aurora-mysql
                        - aurora-postgres
                        - mariadb
                        type: string
                      readerEndpoint:
                        description: Reader Endpoint is the endpoint to use for read
                          operations
                        type: string
                    type: object
                  publiclyAccessible:
                    description: PubliclyAccessible is whether the DB instance is
                      publicly accessible.
                    type: boolean
                  replicationSourceIdentifier:
                    description: |-
                      ReplicationSourceIdentifier ARN of a source DB cluster or DB instance if
                      this DB cluster is to be created as a Read Replica
                    type: string
                  restoreToPointInTime:
                    description: RestoreToPointInTime is the point in time to restore
                      to.
                    properties:
                      identifier:
                        description: |-
                          Identifier is the identifier of the source DB cluster snapshot or DB
                          instance snapshot to restore from. Only valid if not running in cluster
                          mode.
                        type: string
                      restoreToTime:
                        description: RestoreToTime is the time to restore to.
                        format: date-time
                        type: string
                      restoreType:
                        description: |-
                          RestoreType is the type of restore to perform. This option is ignored if
                          not running in cluster mode.
                        enum:
                        - full-copy
                        - copy-on-write
                        type: string
                      sourceDbClusterIdentifier:
                        description: |-
                          SourceDbClusterIdentifier is the identifier of the source DB cluster.
                          This option is ignored if not running in cluster mode.
                        type: string
                      sourceDbInstanceAutomatedBackupsArn:
                        description: |-
                          sourceDbInstanceAutomatedBackupsArn is the ARN of the source DB instance
                          automated backup to restore from. Only valid if not running in cluster mode.
                        type: string
                      sourceDbInstanceIdentifier:
                        description: |-
                          SourceDbInstanceIdentifier is the identifier of the source DB instance.
                          Only valid if not running in cluster mode. If running in cluster mode, use
                          `SourceDbClusterIdentifier` instead.
                        type: string
                      sourceDbiResourceId:
                        description: |-
                          SourceDbiResourceId is the resource ID of the source DB instance. Only
                          valid if not running in cluster mode.
                        type: string
                      useLatestRestorableTime:
                        description: UseLatestRestorableTime is whether to use the
                          latest restorable time.
                        type: boolean
                    type: object
                  s3Import:
                    description: S3Import is the S3 import configuration.
                    properties:
                      bucketName:
                        description: BucketName is the name of the S3 bucket.
                        type: string
                      bucketPrefix:
                        description: |-
                          BucketPrefix is the prefix of the S3 bucket. Can be blank but is the path
                          within the bucket where the data is located.
                        type: string
                      ingestionRole:
                        description: IngestionRole is the role to use for ingestion.
                        type: string
                      sourceEngine:
                        description: SourceEngine is the source engine to use.
                        type: string
                      sourceEngineVersion:
                        description: SourceEngineVersion is the source engine version
                          to use.
                        type: string
                    type: object
                  scalingConfiguration:
                    description: ScalingConfiguration is the scaling configuration.
                    properties:
                      autoPause:
                        description: AutoPause is whether the database should automatically
                          pause.
                        type: boolean
                      maxCapacity:
                        description: MaxCapacity is the maximum capacity for the database.
                        format: int64
                        type: integer
                      minCapacity:
                        description: MinCapacity is the minimum capacity for the database.
                        format: int64
                        type: integer
                      secondsUntilAutoPause:
                        description: |-
                          SecondsUntilAutoPause is the number of seconds until the database
                          automatically pauses.
                        format: int64
                        type: integer
                    type: object
                  secretRotation:
                    description: SecretRotation is the secret rotation configuration.
                    properties:
                      automaticallyAfterDays:
                        description: |-
                          AutomaticallyAfterDays is the number of days after which the secret is
                          rotated automatically.
                        format: int64
                        type: integer
                      enabled:
                        description: Enabled is whether secret rotation is enabled.
                        type: boolean
                      rotateImmediately:
                        description: RotateImmediately is whether the secret should
                          be rotated immediately.
                        type: boolean
                      scheduleExpression:
                        description: ScheduleExpression is the schedule expression
                          for secret rotation.
                        type: string
                    type: object
                  serverlessV2ScalingConfiguration:
                    description: ServerlessV2ScalingConfiguration is the serverless
                      v2 scaling configuration.
                    properties:
                      maxCapacity:
                        description: MaxCapacity is the maximum capacity for the database.
                        format: int64
                        type: integer
                      minCapacity:
                        description: MinCapacity is the minimum capacity for the database.
                        format: int64
                        type: integer
                    type: object
                  storageThroughput:
                    description: |-
                      StorageThroughput is the amount of storage throughput. Only applicable if
                      `storageType` is `gp3`


                      Only applicable if not running in cluster mode
                    format: int64
                    nullable: true
                    type: integer
                  storageType:
                    description: StorageType specifies the storage type to be associated
                      with the cluster
                    type: string
                  tags:
                    additionalProperties:
                      type: string
                    description: Tags is a set of tags to associate with the DB cluster.
                    maxProperties: 50
                    type: object
                type: object
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              eso:
                description: Eso is the configuration for the external secrets operator
                properties:
                  enabled:
                    description: |-
                      Enabled Whether or not to enable `external-secrets-operator` object
                      deployments using `provider-kubernetes.
                    type: boolean
                  fluxSSASecretName:
                    description: |-
                      FluxSSASecretName is the name of the secret that contains SSA details
                      for each project built with infrastructure components.


                      This secret will be updated with the name of the current project with
                      all hyphens, underscores and dots replaced with an empty string.


                      This secret must exist in the same namespace as the current project.
                    type: string
                  kubernetesSecretStore:
                    description: |-
                      KubernetesSecretStore is the Kubernetes secret store to use.


                      The kubernetes secret store is expected to be namespace scoped to prevent
                      secrets leaking across namespaces.
                    type: string
                  stores:
                    description: Stores is a list of secret stores to use for push
                      secrets.
                    items:
                      description: |-
                        SecretsStore is a reference to a secrets store to be passed to External
                        Secrets Operator for creating PushSecrets
                      properties:
                        enabled:
                          description: Enabled is whether the secrets store is enabled.
                          type: boolean
                        isClusterSecretStore:
                          description: IsClusterSecretStore is whether the secret
                            store is a cluster secret store.
                          type: boolean
                        secretStore:
                          description: SecretStoreName is the name of the secret store.
                          type: string
                      required:
                      - secretStore
                      type: object
                    type: array
                  tenantCluster:
                    description: Tenant Cluster details
                    properties:
                      apiServerEndpoint:
                        description: The API endpoint for the tenant cluster.
                        type: string
                      clusterName:
                        description: The name of the tenant cluster.
                        type: string
                      enabled:
                        description: |-
                          Enabled Whether or not to enable `external-secrets-operator` object
                          deployments using `provider-kubernetes.
                        type: boolean
                      namespace:
                        description: The namespace to deploy the external secrets
                          operator in.
                        type: string
                    type: object
                    x-kubernetes-validations:
                    - message: namespace must be set when enabled is true
                      rule: self.enabled == true && self.namespace != null
                    - message: apiServerEndpoint must be set when enabled is true
                      rule: self.enabled == true && self.apiServerEndpoint != null
                    - message: clusterName must be set when enabled is true
                      rule: self.enabled == true && self.clusterName != null
                type: object
              kubernetesProviderConfig:
                description: KubernetesProviderConfig
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              region:
                description: Region is the region in which this collection will be
                  created
                type: string
              subnetGroupIndexes:
                description: SubnetGroupIndexes is a map of service name to subnet
                  set indexes
                properties:
                  cache:
                    description: Cache is the subnet group index to use for the cache
                    type: integer
                  database:
                    description: Database is the subnet group index to use for the
                      database
                    type: integer
                required:
                - cache
                - database
                type: object
              vpc:
                description: Vpc defines the VPC settings
                properties:
                  peering:
                    description: Peering is the VPC to peer with.
                    properties:
                      allowPublic:
                        description: |-
                          AllowPublic specifies if the VPC peering connections should be allowed to


                          be linked to the public subnets
                          Defaults to false
                        type: boolean
                      enabled:
                        description: Enabled specifies if VPC peering is enabled.
                        type: boolean
                      groupBy:
                        description: GroupBy specifies the key to group the remote
                          subnets by
                        type: string
                      remoteVpcs:
                        description: RemoteVpcs is a list of VPCs to peer with.
                        items:
                          properties:
                            allowPublic:
                              description: |-
                                AllowPublic specifies if the VPC peering connections should be allowed to
                                be linked to the public subnets
                              type: boolean
                            name:
                              description: Name specifies the name of the VPC to peer
                                with.
                              type: string
                            providerConfigRef:
                              description: |-
                                ProviderConfigRef specifies the provider config to use for the peering
                                connection.
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            region:
                              description: |-
                                Region specifies the region the VPC is found in.


                                If not defined, the region of the VPC will be assumed to be the same as
                                the region of the peered VPC.
                              type: string
                          required:
                          - name
                          type: object
                        maxItems: 125
                        type: array
                        x-kubernetes-list-type: atomic
                    type: object
                  ram:
                    description: Resource Access Management (RAM)
                    properties:
                      allowExternalPrincipals:
                        description: If external principals are allowed to access
                          the resource access manager.
                        type: boolean
                      enabled:
                        description: Is RAM enabled
                        type: boolean
                      permissions:
                        description: The permissions to associate with the resource
                          access manager.
                        items:
                          type: string
                        type: array
                      principals:
                        description: A list of principals to associate with the resource
                          access manager.
                        items:
                          properties:
                            crossOrg:
                              description: If this is a cross-org principal.
                              type: boolean
                            principal:
                              description: |-
                                The principal to associate with the resource access manager.


                                Possible values are AWS Account ID, AWS Organization ID, or AWS organizations.
                              type: string
                            providerConfigRef:
                              description: Provider config for accepting the share
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                          required:
                          - principal
                          type: object
                        type: array
                      resources:
                        description: A list of resources to associate with the resource
                          access manager.
                        items:
                          type: string
                        type: array
                    type: object
                  subnetsets:
                    description: PeeredSubnets defines how many public and private
                      subnet sets to create.
                    properties:
                      cidrs:
                        description: |-
                          A list of PeeredSubnetSets to create in the VPC


                          Each VPC Cidr may be split into *n* public and *n* private subnets as long
                          as there is enough room on the cidr for it to be split at that level. Any
                          overflow will cause the composition to fail and this will be reflected in
                          the status of the XR.


                          > [!IMPORTANT]
                          > There must be at least 1 entry in this set which will be used as the VPC
                          > default CIDR range, and you may define a maximum of 4 additional entries.
                        items:
                          description: |-
                            PeeredSubnetSet defines the parameters for creating a set of subnets with the
                            same mask.


                            Either one of Netmask or Prefix must be set.
                          properties:
                            netmask:
                              description: The network mask to use when provisioning
                                from IPAM
                              type: integer
                            prefix:
                              description: |-
                                A VPC CIDR or Additional CIDR to use for the VPC. If this is the first
                                entry in the list, it will be used as the default VPC CIDR, otherwise it
                                will be assigned as an additional CIDR to the VPC.
                              pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}/[0-9]{1,2}$
                              type: string
                              x-kubernetes-validations:
                              - message: Cidr is immutable
                                rule: self == oldSelf
                            private:
                              description: Private is the number of private subnets
                                to create in this set
                              properties:
                                clusterNames:
                                  description: |-
                                    A list of cluster names that may add load balancers in the tagged subnet
                                    set. Each entry will result in the tag
                                    `kubernetes.io/cluster/$CLUSTER_NAME shared` being added to the subnets
                                    in this set.


                                    See [public.lbSetIndex](#specsubnetsetscidrspubliclbsetindex) and
                                    [private.lbSetIndex](#specsubnetsetscidrsprivatelbsetindex) for deciding
                                    which subnetset gets these tags.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                count:
                                  description: |-
                                    Count is the number of subnet sets to create with this mask.


                                    > [!WARNING]
                                    > Whilst this field is not `immutable`, care should be taken to never
                                    > decrease its value once set as this will result in the destruction of
                                    > subnet sets which may fail if there are attached resources.
                                  type: integer
                                  x-kubernetes-validations:
                                  - message: count cannot be decreased
                                    rule: self >= oldSelf
                                lbSetIndex:
                                  description: |-
                                    Identifies which subnet set to use for public EKS load balancers. Subnets
                                    in this set will recieve either the `kubernetes.io/role/elb: 1` or
                                    `kubernetes.io/role/internal-elb: 1` tag depending on if these are public
                                    or private subnets.


                                    If this is not set, or set to -1 (the default value), no subnets will be
                                    tagged as load balancer subnets otherwise it should be the index of the
                                    subnet set to tag, starting from index 0.
                                  type: integer
                                mask:
                                  description: |-
                                    This should be a valid CIDR or CIDR suffix (including the prefix `/`) to
                                    use as a mask for the subnet.


                                    To prevent subnets being destroyed and recreated *This field is immutable*
                                  type: string
                                  x-kubernetes-validations:
                                  - message: mask is immutable
                                    rule: self == oldSelf
                                offset:
                                  description: Offset is the number of bits to offset
                                    the subnet mask by
                                  type: integer
                              required:
                              - count
                              - mask
                              type: object
                            public:
                              description: |-
                                Details on how to build the public subnets.


                                Public subnets are subnets with a route to the internet gateway.


                                > [!IMPORTANT]
                                > If this is the default VPC CIDR, i.e. the first entry in the list, the
                                > public subnets will be used for the NAT gateways. Setting this value to
                                > 0 on the default VPC CIDR may result in the creation of fully private
                                > networks with no route to the outside world.
                              properties:
                                clusterNames:
                                  description: |-
                                    A list of cluster names that may add load balancers in the tagged subnet
                                    set. Each entry will result in the tag
                                    `kubernetes.io/cluster/$CLUSTER_NAME shared` being added to the subnets
                                    in this set.


                                    See [public.lbSetIndex](#specsubnetsetscidrspubliclbsetindex) and
                                    [private.lbSetIndex](#specsubnetsetscidrsprivatelbsetindex) for deciding
                                    which subnetset gets these tags.
                                  items:
                                    type: string
                                  type: array
                                  x-kubernetes-list-type: atomic
                                count:
                                  description: |-
                                    Count is the number of subnet sets to create with this mask.


                                    > [!WARNING]
                                    > Whilst this field is not `immutable`, care should be taken to never
                                    > decrease its value once set as this will result in the destruction of
                                    > subnet sets which may fail if there are attached resources.
                                  type: integer
                                  x-kubernetes-validations:
                                  - message: count cannot be decreased
                                    rule: self >= oldSelf
                                lbSetIndex:
                                  description: |-
                                    Identifies which subnet set to use for public EKS load balancers. Subnets
                                    in this set will recieve either the `kubernetes.io/role/elb: 1` or
                                    `kubernetes.io/role/internal-elb: 1` tag depending on if these are public
                                    or private subnets.


                                    If this is not set, or set to -1 (the default value), no subnets will be
                                    tagged as load balancer subnets otherwise it should be the index of the
                                    subnet set to tag, starting from index 0.
                                  type: integer
                                mask:
                                  description: |-
                                    This should be a valid CIDR or CIDR suffix (including the prefix `/`) to
                                    use as a mask for the subnet.


                                    To prevent subnets being destroyed and recreated *This field is immutable*
                                  type: string
                                  x-kubernetes-validations:
                                  - message: mask is immutable
                                    rule: self == oldSelf
                                offset:
                                  description: Offset is the number of bits to offset
                                    the subnet mask by
                                  type: integer
                              required:
                              - count
                              - mask
                              type: object
                          required:
                          - private
                          - public
                          type: object
                          x-kubernetes-validations:
                          - message: Either Netmask or Prefix must be set
                            rule: self.Netmask != 0 || self.Prefix != nil
                        maxItems: 5
                        minItems: 1
                        type: array
                        x-kubernetes-list-map-keys:
                        - prefix
                        x-kubernetes-list-type: map
                      function:
                        default: multiprefixloop
                        description: |-
                          Defines the function to use to calculate the CIDR blocks for thesubnets.


                          The default value is "multiprefixloop" which will split multiple CIDRs
                          into equal parts based on the number of bits provided.


                          `multiprefixloop` is the only function being made available as part of
                          this XRD and as it's defaulted it can be hidden from the user. The
                          function input expects a path though so this has to exist but isn't
                          expected to be defined on the claim.
                        enum:
                        - multiprefixloop
                        type: string
                      ipam:
                        description: |-
                          If this composition is to use IPAM to calculate the CIDR blocks for the
                          VPC.
                        type: boolean
                      poolName:
                        description: |-
                          The name of the IPAM pool to use.


                          Only relevant if IPAM is enabled and there are IPAM pools available in
                          the region.
                        type: string
                    required:
                    - cidrs
                    type: object
                    x-kubernetes-validations:
                    - message: If IPAM is enabled, poolName must be provided
                      rule: self.ipam == true && size(self.poolName) > 0
                  tags:
                    description: Tags is a map of additional tags to assign to the
                      VPC.
                    properties:
                      cluster:
                        additionalProperties:
                          type: string
                        description: Cluster tags to apply subnets for autodiscovery
                          of load balancers
                        type: object
                        x-kubernetes-map-type: granular
                      common:
                        additionalProperties:
                          type: string
                        description: common tags apoplied to all resources
                        type: object
                        x-kubernetes-map-type: granular
                      subnet:
                        additionalProperties:
                          type: string
                        description: Subnet tags to apply to all subnetsets
                        type: object
                        x-kubernetes-map-type: granular
                    type: object
                    x-kubernetes-map-type: granular
                  transitGateway:
                    description: TransitGateway is the transit gateway to attach to
                      the VPC.
                    properties:
                      accountId:
                        description: Account ID the VPC is in
                        type: string
                      allowPublic:
                        description: |-
                          AllowPublic specifies if the VPC peering connections should be allowed to
                          be linked to the public subnets
                        type: boolean
                      amazonSideAsn:
                        description: |-
                          Amazon side ASN. Private autonomous system number (ASN) for
                          the Amazon side of a BGP session.
                        format: int64
                        type: integer
                      applianceModeSupport:
                        description: Appliance mode support. Indicates whether appliance
                          mode support is enabled.
                        type: string
                      autoAcceptSharedAttachments:
                        description: |-
                          Auto accept shared attachments. Indicates whether there is automatic
                          acceptance of attachment requests.
                        type: string
                      cidrBlocks:
                        description: Cidr blocks for the VPC
                        items:
                          description: Cidr is a string type that represents a CIDR
                            block.
                          pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}/[0-9]{1,2}$
                          type: string
                        type: array
                      createPolicyTable:
                        description: Create the policy table.
                        type: boolean
                      defaultRouteTableAssociation:
                        description: |-
                          Default route table association. Indicates whether resource attachments
                          are automatically associated with the default association route table.
                        type: boolean
                      defaultRouteTablePropagation:
                        description: |-
                          Default route table propagation. Indicates whether resource attachments
                          automatically propagate routes to the default propagation route table.
                        type: boolean
                      dnsSupport:
                        description: Dns support. Indicates whether DNS support is
                          enabled.
                        type: string
                      enabled:
                        description: Enabled specifies if the transit gateway is enabled.
                        type: boolean
                      ipv6Support:
                        description: If IPv6 support is enabled for the transit gateway.
                        type: string
                      multicastSupport:
                        description: |-
                          Multicast support. Indicates whether multicast is enabled on the transit gateway.


                          Currently unused in this composition
                        type: string
                      peers:
                        description: Peers is a list of transit gateway peers to connect
                          to
                        items:
                          properties:
                            accountId:
                              description: The Account ID this VPC is associated with
                              type: string
                            dynamicRouting:
                              description: Is Dynamic routing support enabled on this
                                peer
                              type: boolean
                            id:
                              description: The ID of the gateway to peer with
                              type: string
                            managedPrefixList:
                              description: |-
                                ManagedPrefixList contains CIDRs for networks that can be traversed
                                via this transit gateway.
                              items:
                                properties:
                                  addressFamily:
                                    default: IPv4
                                    description: The address family (ipv4 or ipv6)
                                      for the prefix list.
                                    enum:
                                    - IPv4
                                    - IPv6
                                    type: string
                                  blackhole:
                                    description: If this is a blackhole route
                                    type: boolean
                                  entries:
                                    description: The prefix list entries.
                                    items:
                                      properties:
                                        cidr:
                                          description: The CIDR block for the prefix
                                            list entry.
                                          pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}/[0-9]{1,2}$
                                          type: string
                                        description:
                                          description: The description for the prefix
                                            list entry.
                                          type: string
                                      type: object
                                    type: array
                                  id:
                                    description: The ID of the prefix list.
                                    type: string
                                  maxEntries:
                                    description: The maximum number of entries for
                                      the prefix list.
                                    format: int64
                                    type: integer
                                  outbound:
                                    description: |-
                                      Outbound route


                                      This places it in the ManagedPrefixList attached
                                      to the outbound route table
                                    type: boolean
                                type: object
                              type: array
                            name:
                              description: The name of the peer
                              type: string
                            providerConfigRef:
                              description: |-
                                ProviderConfigRef references a ProviderConfig used to create this
                                resource


                                If not provided, will fall back to the top-level ProviderConfigRef


                                Required for cross account transit gateway peering
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            region:
                              description: Region the remote transit gateway is located
                                in
                              type: string
                            routeTableId:
                              description: The ID of the remote route table
                              type: string
                          required:
                          - id
                          - name
                          - routeTableId
                          type: object
                        type: array
                      prefixList:
                        description: Prefix lists for the VPC
                        items:
                          properties:
                            addressFamily:
                              default: IPv4
                              description: The address family (ipv4 or ipv6) for the
                                prefix list.
                              enum:
                              - IPv4
                              - IPv6
                              type: string
                            blackhole:
                              description: If this is a blackhole route
                              type: boolean
                            entries:
                              description: The prefix list entries.
                              items:
                                properties:
                                  cidr:
                                    description: The CIDR block for the prefix list
                                      entry.
                                    pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}/[0-9]{1,2}$
                                    type: string
                                  description:
                                    description: The description for the prefix list
                                      entry.
                                    type: string
                                type: object
                              type: array
                            id:
                              description: The ID of the prefix list.
                              type: string
                            maxEntries:
                              description: The maximum number of entries for the prefix
                                list.
                              format: int64
                              type: integer
                            outbound:
                              description: |-
                                Outbound route


                                This places it in the ManagedPrefixList attached
                                to the outbound route table
                              type: boolean
                          type: object
                        type: array
                        x-kubernetes-list-type: atomic
                      prefixLists:
                        description: Prefix lists for the VPC
                        items:
                          properties:
                            addressFamily:
                              default: IPv4
                              description: The address family (ipv4 or ipv6) for the
                                prefix list.
                              enum:
                              - IPv4
                              - IPv6
                              type: string
                            blackhole:
                              description: If this is a blackhole route
                              type: boolean
                            entries:
                              description: The prefix list entries.
                              items:
                                properties:
                                  cidr:
                                    description: The CIDR block for the prefix list
                                      entry.
                                    pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}/[0-9]{1,2}$
                                    type: string
                                  description:
                                    description: The description for the prefix list
                                      entry.
                                    type: string
                                type: object
                              type: array
                            id:
                              description: The ID of the prefix list.
                              type: string
                            maxEntries:
                              description: The maximum number of entries for the prefix
                                list.
                              format: int64
                              type: integer
                            outbound:
                              description: |-
                                Outbound route


                                This places it in the ManagedPrefixList attached
                                to the outbound route table
                              type: boolean
                          type: object
                        type: array
                      region:
                        description: Region this VPC is located in
                        type: string
                      remoteVpcs:
                        description: RemoteVpcs is a list of VPCs build a transit
                          gateway between
                        items:
                          description: |-
                            TgwWrappedVpcWithProviderConfig defines the parameters for creating a VPC with
                            the option of peered subnets.
                          properties:
                            accountId:
                              description: Account ID the VPC is in
                              type: string
                            allowPublic:
                              description: |-
                                AllowPublic specifies if the VPC peering connections should be allowed to
                                be linked to the public subnets
                              type: boolean
                            cidrBlocks:
                              description: Cidr blocks for the VPC
                              items:
                                description: Cidr is a string type that represents
                                  a CIDR block.
                                pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}/[0-9]{1,2}$
                                type: string
                              type: array
                            name:
                              description: The name of the VPC
                              type: string
                            prefixLists:
                              description: Prefix lists for the VPC
                              items:
                                properties:
                                  addressFamily:
                                    default: IPv4
                                    description: The address family (ipv4 or ipv6)
                                      for the prefix list.
                                    enum:
                                    - IPv4
                                    - IPv6
                                    type: string
                                  blackhole:
                                    description: If this is a blackhole route
                                    type: boolean
                                  entries:
                                    description: The prefix list entries.
                                    items:
                                      properties:
                                        cidr:
                                          description: The CIDR block for the prefix
                                            list entry.
                                          pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}/[0-9]{1,2}$
                                          type: string
                                        description:
                                          description: The description for the prefix
                                            list entry.
                                          type: string
                                      type: object
                                    type: array
                                  id:
                                    description: The ID of the prefix list.
                                    type: string
                                  maxEntries:
                                    description: The maximum number of entries for
                                      the prefix list.
                                    format: int64
                                    type: integer
                                  outbound:
                                    description: |-
                                      Outbound route


                                      This places it in the ManagedPrefixList attached
                                      to the outbound route table
                                    type: boolean
                                type: object
                              type: array
                            providerConfigRef:
                              description: |-
                                ProviderConfigRef references a ProviderConfig used to create this
                                resource


                                If not provided, will fall back to the top-level ProviderConfigRef


                                Required for cross account VPCs
                                Should not be set for same account VPCs unless restricted by
                                IAM
                              properties:
                                name:
                                  description: Name of the referenced object.
                                  type: string
                                policy:
                                  description: Policies for referencing.
                                  properties:
                                    resolution:
                                      default: Required
                                      description: |-
                                        Resolution specifies whether resolution of this reference is required.
                                        The default is 'Required', which means the reconcile will fail if the
                                        reference cannot be resolved. 'Optional' means this reference will be
                                        a no-op if it cannot be resolved.
                                      enum:
                                      - Required
                                      - Optional
                                      type: string
                                    resolve:
                                      description: |-
                                        Resolve specifies when this reference should be resolved. The default
                                        is 'IfNotPresent', which will attempt to resolve the reference only when
                                        the corresponding field is not present. Use 'Always' to resolve the
                                        reference on every reconcile.
                                      enum:
                                      - Always
                                      - IfNotPresent
                                      type: string
                                  type: object
                              required:
                              - name
                              type: object
                            region:
                              description: Region this VPC is located in
                              type: string
                            routeTableIds:
                              description: Route table ids in the VPC
                              items:
                                description: |-
                                  RouteTableId is a string type that represents the unique identifier for a
                                  route table.
                                pattern: ^rtb-[a-z0-9]{8,17}$
                                type: string
                              type: array
                            subnetIds:
                              description: SubnetIds in the VPC
                              items:
                                description: SubnetId is a string type that represents
                                  the unique identifier for a subnet.
                                pattern: ^subnet-[a-z0-9]{8,17}$
                                type: string
                              type: array
                            vpcId:
                              description: The ID of the VPC
                              pattern: ^vpc-[a-z0-9]{8,17}$
                              type: string
                          required:
                          - name
                          type: object
                        type: array
                      routeTableIds:
                        description: Route table ids in the VPC
                        items:
                          description: |-
                            RouteTableId is a string type that represents the unique identifier for a
                            route table.
                          pattern: ^rtb-[a-z0-9]{8,17}$
                          type: string
                        type: array
                      subnetIds:
                        description: SubnetIds in the VPC
                        items:
                          description: SubnetId is a string type that represents the
                            unique identifier for a subnet.
                          pattern: ^subnet-[a-z0-9]{8,17}$
                          type: string
                        type: array
                      tags:
                        additionalProperties:
                          type: string
                        description: The tags for the transit gateway.
                        maxProperties: 50
                        type: object
                        x-kubernetes-map-type: atomic
                      transitGatewayDefaultRouteTableAssociation:
                        description: |-
                          TransitGatewayDefaultRouteTableAssociation. Indicates whether resource
                          attachments are automatically associated with the default association route table.
                        type: string
                      transitGatewayDefaultRouteTablePropagation:
                        description: |-
                          TransitGatewayDefaultRouteTablePropagation. Indicates whether resource
                          attachments automatically propagate routes to the default propagation route table.
                        type: string
                      vpcId:
                        description: The ID of the VPC
                        pattern: ^vpc-[a-z0-9]{8,17}$
                        type: string
                      vpnEcmpSupport:
                        description: Vpn ecmp support. Indicates whether Equal Cost
                          Multipath Protocol support is enabled.
                        type: string
                    type: object
                required:
                - peering
                - subnetsets
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - availabilityZones
            - cache
            - database
            - kubernetesProviderConfig
            - region
            - vpc
            type: object
          status:
            description: RdsClusterStatus defines the observed state of RdsCluster
            properties:
              cacheClusterEndpoints:
                description: |-
                  CacheClusterEndpoints is a list of endpoints of the Elasticache clusters
                  when the cache is configured in cluster mode
                items:
                  type: string
                type: array
              cacheConnectionSecret:
                description: |-
                  CacheConnectionSecret is the secret containing the connection details for
                  the Elasticache replication group
                type: string
              cacheEndpoint:
                description: CacheEndpoint is the endpoint of the Elasticache replication
                  group
                type: string
              cacheGlobalConnectionSecret:
                description: |-
                  CacheGlobalConnectionSecret is the secret containing the connection
                  details for the global Elasticache replication group
                type: string
              cacheGlobalEndpoint:
                description: |-
                  CacheGlobalEndpoint is the global (RW) endpoint of the Elasticache
                  global replication group
                type: string
              cacheGlobalReaderEndpoint:
                description: |-
                  CacheGlobalReaderEndpoint is the global (RO) endpoint of the Elasticache
                  global replication group
                type: string
              cachePort:
                description: CachePort is the port of the Elasticache
                type: integer
              cacheReaderEndpoint:
                description: |-
                  CacheReaderEndpoint is the reader endpoint of the Elasticache replication
                  group
                type: string
              cacheSubnets:
                description: CacheSubnets is the list of subnets to be used by ElasticSearch
                items:
                  type: string
                type: array
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              rdsConnectionSecret:
                description: |-
                  RdsConnectionSecret is the secret containing the connection details
                  for the database
                type: string
              rdsEndpoint:
                description: RdsEndpoint is the endpoint of the database
                type: string
              rdsPort:
                description: RdsPort is the port of the database
                type: integer
              rdsSubnets:
                description: RdsSubnets is the list of subnets to be used by the database
                items:
                  type: string
                type: array
              ready:
                description: Is the composition complete
                type: boolean
              vpc:
                description: Vpc is a VPC configuration to bind the cluster to
                properties:
                  additionalCidrBlocks:
                    description: A list of additional VPC CIDR blocks defined in this
                      VPC
                    items:
                      type: string
                    type: array
                    x-kubernetes-list-type: atomic
                  cidrBlock:
                    description: The Ipv4 cidr block defined for this VPC
                    type: string
                  id:
                    description: ID The VPC ID
                    type: string
                  internetGateway:
                    description: The internet gateway defined in this VPC
                    type: string
                  natGateways:
                    additionalProperties:
                      type: string
                    description: A map of NAT gateways defined in this VPC
                    type: object
                    x-kubernetes-map-type: atomic
                  privateRouteTables:
                    description: A map of private route tables defined in this VPC
                    items:
                      additionalProperties:
                        properties:
                          id:
                            description: The ID of the route table
                            type: string
                        required:
                        - id
                        type: object
                      description: StatusRouteTables is a map of route tables and
                        their status
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                    x-kubernetes-list-type: atomic
                  privateSubnets:
                    description: A map of private subnets defined in this VPC
                    items:
                      additionalProperties:
                        properties:
                          id:
                            description: The ID of the subnet
                            type: string
                        required:
                        - id
                        type: object
                      description: StatusSubnets is a map of subnets and their status
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                    x-kubernetes-list-type: atomic
                  providerConfig:
                    description: The provider config used to look up this VPC
                    type: string
                  publicRouteTables:
                    description: A map of public route tables defined in this VPC
                    items:
                      additionalProperties:
                        properties:
                          id:
                            description: The ID of the route table
                            type: string
                        required:
                        - id
                        type: object
                      description: StatusRouteTables is a map of route tables and
                        their status
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                    x-kubernetes-list-type: atomic
                  publicSubnets:
                    description: A list of maps of public subnets defined in this
                      VPC
                    items:
                      additionalProperties:
                        properties:
                          id:
                            description: The ID of the subnet
                            type: string
                        required:
                        - id
                        type: object
                      description: StatusSubnets is a map of subnets and their status
                      type: object
                      x-kubernetes-map-type: atomic
                    type: array
                    x-kubernetes-list-type: atomic
                  region:
                    description: The region this VPC is located in
                    type: string
                  securityGroups:
                    additionalProperties:
                      type: string
                    description: A map of security groups defined in this VPC
                    type: object
                    x-kubernetes-map-type: atomic
                  transitGateways:
                    additionalProperties:
                      properties:
                        attachments:
                          additionalProperties:
                            properties:
                              id:
                                description: The ID of the transit gateway attachment
                                type: string
                              type:
                                description: The type of the transit gateway attachment
                                type: string
                            type: object
                          description: |-
                            TransitGatewayAttachments The IDs of the transit gateway attachment(s)
                            associated with this transit gateway
                          type: object
                        id:
                          description: The ID of the transit gateway
                          type: string
                        routeTables:
                          additionalProperties:
                            properties:
                              default:
                                description: Is this the default route table for the
                                  transit gateway
                                type: boolean
                              id:
                                description: The ID of the transit gateway route table
                                type: string
                            type: object
                          description: |-
                            TransitGatewayRouteTables The IDs of the transit gateway route table(s)
                            associated with this transit gateway
                          type: object
                      type: object
                    description: A map of transit gateways defined in this VPC
                    nullable: true
                    type: object
                    x-kubernetes-map-type: atomic
                  vpcPeeringConnections:
                    additionalProperties:
                      type: string
                    description: A map of VPC peering connections defined in this
                      VPC
                    nullable: true
                    type: object
                    x-kubernetes-map-type: atomic
                required:
                - id
                type: object
            type: object
        required:
        - spec
        type: object
    served: true
