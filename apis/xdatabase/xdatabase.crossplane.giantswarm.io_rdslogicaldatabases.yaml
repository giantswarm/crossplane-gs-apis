---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (unknown)
  creationTimestamp: null
  name: rdslogicaldatabases.xdatabase.crossplane.giantswarm.io
spec:
  claimNames:
    kind: LogicalDatabaseClaim
    plural: logicaldatabaseclaims
  defaultCompositionRef:
    name: logical-database
  enforcedCompositionRef:
    name: logical-database
  group: xdatabase.crossplane.giantswarm.io
  names:
    kind: RdsLogicalDatabase
    listKind: RdsLogicalDatabaseList
    plural: rdslogicaldatabases
    shortNames:
    - ld
    singular: rdslogicaldatabase
  versions:
  - name: v1alpha1
    referenceable: true
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: RdsLogicalDatabaseSpec defines the desired state of RdsLogicalDatabase
            properties:
              databases:
                additionalProperties:
                  properties:
                    users:
                      additionalProperties:
                        description: |-
                          Defines a user to create in the database

                          See the provider specific documentation for the available configuration
                          parameters.

                          postgresql: https://www.postgresql.org/docs/current/sql-createrole.html
                          mysql: https://dev.mysql.com/doc/refman/8.0/en/user-resources.html

                          For MySQL and MariaDB the following fields are supported:
                          - `binlog` (boolean)
                          - `maxConnectionsPerHour` (int) Default 100 - The maximum number of connections the user can make per hour (0 for unlimited)
                          - `maxQueriesPerHour` (int) Default 1000 - The maximum number of queries the user can make per hour (0 for unlimited)
                          - `maxUpdatesPerHour` (int) Default 1000 - The maximum number of updates the user can make per hour (0 for unlimited)
                          - `maxUserConnections` (int) Default 10 - The maximum number of connections the user can have open at one time (0 for unlimited)
                          - `privileges` ([]string) - A list of privileges to grant to the user

                          For PostgreSQL the following fields are supported:
                          - `configurationParameters` (map[string]*string) - A map of configuration parameters to set for the user
                          - `privileges` ([]string) - A list of privileges to grant to the user
                          - `connectionLimit` (int) Default 10 - The maximum number of connections the user can have open at one time
                          - `bypassRLS` (boolean) Default false - Whether the user should bypass row level security
                          - `createDb` (boolean) Default false - Whether the user should be able to create databases
                          - `createRole` (boolean) Default false - Whether the user should be able to create roles
                          - `inherit` (boolean) Default true - Whether the user should inherit privileges from roles it is a member of
                          - `login` (boolean) Default true - Whether the user should be able to log in
                          - `replication` (boolean) Default false - Whether the user should be able to initiate streaming replication
                          - `superuser` (boolean) Default false - Whether the user should be a superuser

                          With the exception of `configurationParameters`, all fields should be
                          created as elements directly on the user object and not as nested objects.
                        properties:
                          configurationParameters:
                            additionalProperties:
                              type: string
                            description: |-
                              ConfigurationParameters is the configuration parameters for the user.

                              Only applicable for postgresql databases

                              See https://www.postgresql.org/docs/current/runtime-config-client.html for
                              a list of available parameters.
                            type: object
                          privileges:
                            description: Privileges is a list of privileges to grant
                              to the user.
                            items:
                              type: string
                            type: array
                        type: object
                        x-kubernetes-preserve-unknown-fields: true
                      description: A map of users to create for the database
                      type: object
                  type: object
                description: Databases is a map of databases to create.
                type: object
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              engine:
                description: The type of database engine being provisioned
                enum:
                - postgres
                - mysql
                - aurora-postgresql
                - aurora-mysql
                type: string
              eso:
                description: Eso is the configuration for the external secrets operator
                properties:
                  enabled:
                    description: |-
                      Enabled Whether or not to enable `external-secrets-operator` object
                      deployments using `provider-kubernetes.
                    type: boolean
                  fluxSSASecretName:
                    description: |-
                      FluxSSASecretName is the name of the secret that contains SSA details
                      for each project built with infrastructure components.

                      This secret will be updated with the name of the current project with
                      all hyphens, underscores and dots replaced with an empty string.

                      This secret must exist in the same namespace as the current project.
                    type: string
                  kubernetesSecretStore:
                    description: |-
                      KubernetesSecretStore is the Kubernetes secret store to use.

                      The kubernetes secret store is expected to be namespace scoped to prevent
                      secrets leaking across namespaces.
                    type: string
                  stores:
                    description: Stores is a list of secret stores to use for push
                      secrets.
                    items:
                      description: |-
                        SecretsStore is a reference to a secrets store to be passed to External
                        Secrets Operator for creating PushSecrets
                      properties:
                        enabled:
                          description: Enabled is whether the secrets store is enabled.
                          type: boolean
                        isClusterSecretStore:
                          description: IsClusterSecretStore is whether the secret
                            store is a cluster secret store.
                          type: boolean
                        name:
                          description: Name is the name of the secret store.
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  tenantCluster:
                    description: Tenant Cluster details
                    properties:
                      apiServerEndpoint:
                        description: The API endpoint for the tenant cluster.
                        type: string
                      clusterName:
                        description: The name of the tenant cluster.
                        type: string
                      enabled:
                        description: |-
                          Enabled Whether or not to enable `external-secrets-operator` object
                          deployments using `provider-kubernetes.
                        type: boolean
                      namespace:
                        description: |-
                          The namespace on the tenant cluster to deploy secrets to. If not set
                          will default to the `default` namespace.
                        type: string
                    type: object
                type: object
              kubernetesProviderConfig:
                description: KubernetesProviderConfig is the provider config for the
                  Kubernetes provider.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - kubernetesProviderConfig
            type: object
          status:
            description: RdsLogicalDatabaseStatus defines the observed state of RdsLogicalDatabase
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    observedGeneration:
                      description: |-
                        ObservedGeneration represents the .metadata.generation that the condition was set based upon.
                        For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                        with respect to the current state of the instance.
                      format: int64
                      type: integer
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              connectionSecrets:
                description: Connection secrets created for the databases
                properties:
                  app:
                    description: The name of the secret created specifically for the
                      app
                    type: string
                  users:
                    additionalProperties:
                      type: string
                    description: A map of secret names created for users
                    type: object
                type: object
              ready:
                description: Is the provisioning ready
                type: boolean
            type: object
        required:
        - spec
        type: object
    served: true
