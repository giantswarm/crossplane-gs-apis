---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: peeredvpcnetworks.xnetworks.crossplane.giantswarm.io
spec:
  claimNames:
    kind: PeeredVpcNetworkClaim
    plural: peeredvpcnetworkclaims
  defaultCompositionRef:
    name: peered-vpc-network
  enforcedCompositionRef:
    name: peered-vpc-network
  group: xnetworks.crossplane.giantswarm.io
  names:
    kind: PeeredVpcNetwork
    listKind: PeeredVpcNetworkList
    plural: peeredvpcnetworks
    shortNames:
    - pvpc
    singular: peeredvpcnetwork
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.region
      name: Region
      type: string
    - jsonPath: .status.vpcID
      name: VpcID
      type: string
    name: v1alpha1
    referenceable: true
    schema:
      openAPIV3Schema:
        description: |-
          PeerVpcNetworkSpec defines the desired state of PeerVpcNetwork


          This is a more advanced composition that uses KCL language to calculate the
          overall structure of the VPC and subnets, utilising dynamic calculation for
          the components of the VPC.


          A claim made against this composition will result in the creation of a VPC
          with a number of subnets grouped into sets of 3 availability zones.


          If VPC Peering is enabled, the VPC will be peered with the VPCs specified in
          the claim under the `spec.peering.remoteVpcs` field.


          Up to 5 CIDR ranges can be specified and these are done via the
          `spec.subnetsets.cidrs` field, where the first entry in the list is the
          default VPC CIDR and all subsequent entries are attached as additional
          VPC CIDRs.
        properties:
          spec:
            properties:
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              peering:
                description: Peering is the VPC to peer with.
                properties:
                  allowPublic:
                    description: |-
                      AllowPublic specifies if the VPC peering connections should be allowed to
                      be linked to the public subnets
                      Defaults to false
                    type: boolean
                  enabled:
                    description: |-
                      Enabled specifies if the VPC peering connections should be enabled for
                      this VPC.
                      Defaults to false
                    type: boolean
                  remoteVpcs:
                    description: RemoteVpcs is a list of VPCs to peer with.
                    items:
                      description: VpcPeer defines the parameters for peering with
                        a VPC.
                      properties:
                        allowPublic:
                          description: |-
                            Disabled specifies if the peering connection should be disabled.
                            Defaults to true
                          type: boolean
                        name:
                          description: Name specifies the name of the VPC to peer
                            with.
                          type: string
                        providerConfigRef:
                          description: |-
                            ProviderConfigRef specifies the provider config to use for the peering
                            connection.
                          type: string
                        region:
                          description: |-
                            Region specifies the region the VPC is found in.


                            If not defined, the region of the VPC will be assumed to be the same as
                            the region of the peered VPC.
                          type: string
                      required:
                      - name
                      type: object
                    maxItems: 125
                    type: array
                    x-kubernetes-list-type: atomic
                type: object
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              region:
                description: Region is the region in which the VPC will be created.
                type: string
              subnetsets:
                description: PeeredSubnets defines how many public and private subnet
                  sets to create.
                properties:
                  availabilityZones:
                    description: |-
                      AvailabilityZones is a list of availability zones in the region. The
                      number of availability zones must match the number of bits x the number
                      of subnetsets (public + private). The VPC Cidr must be big enough to
                      encompass all the subnet CIDR blocks.
                    items:
                      type: string
                    maxItems: 3
                    minItems: 3
                    type: array
                  cidrs:
                    description: |-
                      Cidrs is a list of PeeredSubnetSets to create in the VPC


                      Each PeeredSubnetSet will create 1 subnet
                    items:
                      description: |-
                        PeeredSubnetSet defines the parameters for creating a set of subnets with the
                        same mask.
                      properties:
                        prefix:
                          description: Prefix is the CIDR prefix to use for the subnet
                            set
                          pattern: ^([0-9]{1,3}.){3}[0-9]{1,3}/[0-9]{1,2}$
                          type: string
                        private:
                          description: Private is the number of private subnets to
                            create in this set
                          properties:
                            count:
                              description: Count is the number of subnet sets to create
                                with this mask
                              type: integer
                            lbSetIndex:
                              description: |-
                                Determines which subnet set in this range to use for kubernetes load
                                balancers. -1 means no load balancer tag is defined on this group
                              type: integer
                            mask:
                              description: Mask is the CIDR mask to use for the subnet
                                set
                              type: string
                            offset:
                              description: Offset is the number of bits to offset
                                the subnet mask by
                              type: integer
                          required:
                          - mask
                          type: object
                        public:
                          description: Public is the number of public subnets to create
                            in this set
                          properties:
                            count:
                              description: Count is the number of subnet sets to create
                                with this mask
                              type: integer
                            lbSetIndex:
                              description: |-
                                Determines which subnet set in this range to use for kubernetes load
                                balancers. -1 means no load balancer tag is defined on this group
                              type: integer
                            mask:
                              description: Mask is the CIDR mask to use for the subnet
                                set
                              type: string
                            offset:
                              description: Offset is the number of bits to offset
                                the subnet mask by
                              type: integer
                          required:
                          - mask
                          type: object
                      required:
                      - prefix
                      - private
                      - public
                      type: object
                    maxItems: 5
                    minItems: 1
                    type: array
                    x-kubernetes-list-type: atomic
                  function:
                    default: multiprefixloop
                    description: |-
                      Function defines the function to use to calculate the CIDR blocks for the
                      subnets. The default is "multiprefixloop" which will split multiple CIDRs
                      into equal parts based on the number of bits provided.
                      `multiprefixloop` is the only function being made available as part of
                      this XRD and as it's defaulted it can be hidden from the user. The
                      function input expects a path though so this has to exist but isn't
                      expected to be defined on the claim.
                    enum:
                    - multiprefixloop
                    type: string
                required:
                - availabilityZones
                - cidrs
                type: object
              tags:
                description: Tags is a map of additional tags to assign to the VPC.
                properties:
                  cluster:
                    additionalProperties:
                      type: string
                    description: Cluster tags to apply subnets for autodiscovery of
                      load balancers
                    type: object
                    x-kubernetes-map-type: granular
                  common:
                    additionalProperties:
                      type: string
                    description: common tags apoplied to all resources
                    type: object
                    x-kubernetes-map-type: granular
                  subnet:
                    additionalProperties:
                      type: string
                    description: Subnet tags to apply to all subnetsets
                    type: object
                    x-kubernetes-map-type: granular
                type: object
                x-kubernetes-map-type: granular
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - region
            - subnetsets
            type: object
          status:
            properties:
              calculatedCidrs:
                additionalProperties:
                  items:
                    type: string
                  type: array
                description: Contains the CIDR blocks output by function-cidr
                type: object
                x-kubernetes-map-type: atomic
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              subnetBits:
                additionalProperties:
                  items:
                    type: integer
                  type: array
                description: Contains the subnet bits output by function-kcl-subnet-bits
                type: object
                x-kubernetes-map-type: atomic
              vpcs:
                additionalProperties:
                  description: Vpc holds VPC information
                  properties:
                    cidrBlock:
                      description: The Ipv4 cidr block defined for this VPC
                      type: string
                    id:
                      description: ID The VPC ID
                      type: string
                    internetGateway:
                      description: The internet gateway defined in this VPC
                      type: string
                    natGateways:
                      additionalProperties:
                        type: string
                      description: A map of NAT gateways defined in this VPC
                      type: object
                      x-kubernetes-map-type: atomic
                    privateRouteTables:
                      description: A map of private route tables defined in this VPC
                      items:
                        additionalProperties:
                          type: string
                        description: StatusRouteTables is a map of route tables and
                          their status
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                      x-kubernetes-list-type: atomic
                    privateSubnets:
                      description: A map of private subnets defined in this VPC
                      items:
                        additionalProperties:
                          type: string
                        description: StatusSubnets is a map of subnets and their status
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                      x-kubernetes-list-type: atomic
                    publicRouteTables:
                      description: A map of public route tables defined in this VPC
                      items:
                        additionalProperties:
                          type: string
                        description: StatusRouteTables is a map of route tables and
                          their status
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                      x-kubernetes-list-type: atomic
                    publicSubnets:
                      description: A list of maps of public subnets defined in this
                        VPC
                      items:
                        additionalProperties:
                          type: string
                        description: StatusSubnets is a map of subnets and their status
                        type: object
                        x-kubernetes-map-type: atomic
                      type: array
                      x-kubernetes-list-type: atomic
                    securityGroups:
                      additionalProperties:
                        type: string
                      description: A map of security groups defined in this VPC
                      type: object
                      x-kubernetes-map-type: atomic
                    transitGateways:
                      additionalProperties:
                        type: string
                      description: A map of transit gateways defined in this VPC
                      nullable: true
                      type: object
                      x-kubernetes-map-type: atomic
                    vpcPeeringConnections:
                      additionalProperties:
                        type: string
                      description: A map of VPC peering connections defined in this
                        VPC
                      nullable: true
                      type: object
                      x-kubernetes-map-type: atomic
                  required:
                  - id
                  type: object
                description: |-
                  Vpcs contains details of both the peered VPCs and the current local VPC
                  The current VPC can be found at the `self` key
                type: object
                x-kubernetes-map-type: atomic
            type: object
        required:
        - spec
        type: object
    served: true
