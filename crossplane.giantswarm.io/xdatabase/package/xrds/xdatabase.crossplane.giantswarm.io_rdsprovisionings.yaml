---
apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: (devel)
  creationTimestamp: null
  name: rdsprovisionings.xdatabase.crossplane.giantswarm.io
spec:
  claimNames:
    kind: RdsProvisioningClaim
    plural: rdsprovisioningclaims
  defaultCompositionRef:
    name: rds-provisioning
  enforcedCompositionRef:
    name: rds-provisioning
  group: xdatabase.crossplane.giantswarm.io
  names:
    kind: RdsProvisioning
    listKind: RdsProvisioningList
    plural: rdsprovisionings
    shortNames:
    - rdsprv
    singular: rdsprovisioning
  versions:
  - name: v1alpha1
    referenceable: true
    schema:
      openAPIV3Schema:
        properties:
          spec:
            description: |-
              RdsProvisioningSpec defines the desired state of RdsProvisioning


              One of `providerConfigRef` or `connectionSecretName` must be provided.


              If `providerConfigRef` is not provided, the composition will create a
              provider config using the connectionSecretName.
            properties:
              connectionSecretName:
                description: |-
                  The name of the connection secret to use for the RDS instance


                  Required if `providerConfigRef` is not provided, ignored otherwise
                  Must exist in the same namespace as the provisioning claim


                  If this value is provided, the composition will attempt to create a
                  provider config using the engine specific providerconfig spec
                type: string
              databases:
                additionalProperties:
                  additionalProperties:
                    description: |-
                      Defines a user to create in the database


                      See the provider specific documentation for the available configuration
                      parameters.


                      With the exception of `configurationParameters`, all fields should be
                      created as elements directly on the user object and not as nested objects.
                    properties:
                      configurationParameters:
                        additionalProperties:
                          type: string
                        description: |-
                          ConfigurationParameters is the configuration parameters for the user.


                          Only applicable for postgresql databases
                        type: object
                      privileges:
                        description: Privileges is a list of privileges to grant to
                          the user.
                        items:
                          type: string
                        type: array
                    type: object
                    x-kubernetes-preserve-unknown-fields: true
                  description: A list of SqlUser objects to use for the database
                  type: object
                  x-kubernetes-map-type: atomic
                description: Databases is a map of databases to create.
                type: object
                x-kubernetes-map-type: atomic
              deletionPolicy:
                default: Delete
                description: |-
                  DeletionPolicy specifies what will happen to the underlying external
                  when this managed resource is deleted - either "Delete" or "Orphan" the
                  external resource.
                  This field is planned to be deprecated in favor of the ManagementPolicies
                  field in a future release. Currently, both could be set independently and
                  non-default values would be honored if the feature flag is enabled.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                enum:
                - Orphan
                - Delete
                type: string
              enabled:
                description: Determines if the RDS provisioning should be enabled
                type: boolean
              engine:
                description: The type of database engine being provisioned
                enum:
                - postgres
                - mysql
                - aurora-mysql
                - aurora-postgres
                - mariadb
                type: string
              eso:
                description: ESO configuration
                properties:
                  enabled:
                    description: |-
                      Enabled Whether or not to enable `external-secrets-operator` object
                      deployments using `provider-kubernetes.
                    type: boolean
                  fluxSSASecretName:
                    description: |-
                      FluxSSASecretName is the name of the secret that contains SSA details
                      for each project built with infrastructure components.


                      This secret will be updated with the name of the current project with
                      all hyphens, underscores and dots replaced with an empty string.


                      This secret must exist in the same namespace as the current project.
                    type: string
                  kubernetesSecretStore:
                    description: |-
                      KubernetesSecretStore is the Kubernetes secret store to use.


                      The kubernetes secret store is expected to be namespace scoped to prevent
                      secrets leaking across namespaces.
                    type: string
                  stores:
                    description: Stores is a list of secret stores to use for push
                      secrets.
                    items:
                      description: |-
                        SecretsStore is a reference to a secrets store to be passed to External
                        Secrets Operator for creating PushSecrets
                      properties:
                        enabled:
                          description: Enabled is whether the secrets store is enabled.
                          type: boolean
                        isClusterSecretStore:
                          description: IsClusterSecretStore is whether the secret
                            store is a cluster secret store.
                          type: boolean
                        secretStore:
                          description: SecretStoreName is the name of the secret store.
                          type: string
                      required:
                      - secretStore
                      type: object
                    type: array
                  tenantCluster:
                    description: Tenant Cluster details
                    properties:
                      apiServerEndpoint:
                        description: The API endpoint for the tenant cluster.
                        type: string
                      clusterName:
                        description: The name of the tenant cluster.
                        type: string
                      enabled:
                        description: |-
                          Enabled Whether or not to enable `external-secrets-operator` object
                          deployments using `provider-kubernetes.
                        type: boolean
                      namespace:
                        description: The namespace to deploy the external secrets
                          operator in.
                        type: string
                    type: object
                    x-kubernetes-validations:
                    - message: namespace must be set when enabled is true
                      rule: self.enabled == true && self.namespace != null
                    - message: apiServerEndpoint must be set when enabled is true
                      rule: self.enabled == true && self.apiServerEndpoint != null
                    - message: clusterName must be set when enabled is true
                      rule: self.enabled == true && self.clusterName != null
                type: object
              kubernetesProviderConfig:
                description: KubernetesProviderConfig is the provider config for the
                  Kubernetes provider.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              managementPolicies:
                default:
                - '*'
                description: |-
                  THIS IS A BETA FIELD. It is on by default but can be opted out
                  through a Crossplane feature flag.
                  ManagementPolicies specify the array of actions Crossplane is allowed to
                  take on the managed and external resources.
                  This field is planned to replace the DeletionPolicy field in a future
                  release. Currently, both could be set independently and non-default
                  values would be honored if the feature flag is enabled. If both are
                  custom, the DeletionPolicy field will be ignored.
                  See the design doc for more information: https://github.com/crossplane/crossplane/blob/499895a25d1a1a0ba1604944ef98ac7a1a71f197/design/design-doc-observe-only-resources.md?plain=1#L223
                  and this one: https://github.com/crossplane/crossplane/blob/444267e84783136daa93568b364a5f01228cacbe/design/one-pager-ignore-changes.md
                items:
                  description: |-
                    A ManagementAction represents an action that the Crossplane controllers
                    can take on an external resource.
                  enum:
                  - Observe
                  - Create
                  - Update
                  - Delete
                  - LateInitialize
                  - '*'
                  type: string
                type: array
              providerConfigRef:
                default:
                  name: default
                description: |-
                  ProviderConfigReference specifies how the provider that will be used to
                  create, observe, update, and delete this managed resource should be
                  configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: |-
                          Resolution specifies whether resolution of this reference is required.
                          The default is 'Required', which means the reconcile will fail if the
                          reference cannot be resolved. 'Optional' means this reference will be
                          a no-op if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: |-
                          Resolve specifies when this reference should be resolved. The default
                          is 'IfNotPresent', which will attempt to resolve the reference only when
                          the corresponding field is not present. Use 'Always' to resolve the
                          reference on every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: |-
                  PublishConnectionDetailsTo specifies the connection secret config which
                  contains a name, metadata and a reference to secret store config to
                  which any connection details for this managed resource should be written.
                  Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: |-
                      SecretStoreConfigRef specifies which secret store config should be used
                      for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: |-
                              Resolution specifies whether resolution of this reference is required.
                              The default is 'Required', which means the reconcile will fail if the
                              reference cannot be resolved. 'Optional' means this reference will be
                              a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: |-
                              Resolve specifies when this reference should be resolved. The default
                              is 'IfNotPresent', which will attempt to resolve the reference only when
                              the corresponding field is not present. Use 'Always' to resolve the
                              reference on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: |-
                          Annotations are the annotations to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.annotations".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: |-
                          Labels are the labels/tags to be added to connection secret.
                          - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store types.
                        type: object
                      type:
                        description: |-
                          Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              readerEndpoint:
                description: Reader Endpoint is the endpoint to use for read operations
                type: string
              writeConnectionSecretToRef:
                description: |-
                  WriteConnectionSecretToReference specifies the namespace and name of a
                  Secret to which any connection details for this managed resource should
                  be written. Connection details frequently include the endpoint, username,
                  and password required to connect to the managed resource.
                  This field is planned to be replaced in a future release in favor of
                  PublishConnectionDetailsTo. Currently, both could be set independently
                  and connection details would be published to both without affecting
                  each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            type: object
          status:
            description: RdsProvisioningStatus defines the observed state of RdsProvisioning
            properties:
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: |-
                        LastTransitionTime is the last time this condition transitioned from one
                        status to another.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A Message containing details about this condition's last transition from
                        one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: |-
                        Type of this condition. At most one of each condition type may apply to
                        a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - type
                x-kubernetes-list-type: map
              connectionSecrets:
                description: Connection secrets created for the databases
                properties:
                  app:
                    description: The name of the secret created specifically for the
                      app
                    type: string
                  users:
                    additionalProperties:
                      type: string
                    description: A map of secret names created for users
                    type: object
                type: object
              ready:
                description: Is the provisioning ready
                type: boolean
            type: object
        required:
        - spec
        type: object
    served: true
